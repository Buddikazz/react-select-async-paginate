{"version":3,"file":"main.e20cba02b93b6094b922.hot-update.js","sources":["webpack:///./.yarn/$virtual/react-select-async-paginate-virtual-2fa6d1ceb1/1/packages/react-select-async-paginate/es/withAsyncPaginate.js","webpack:///./.yarn/$virtual/react-select-async-paginate-virtual-2fa6d1ceb1/1/packages/react-select-async-paginate/es/wrapMenuList.js","webpack:///\\.)(","webpack:///./packages/react-select-async-paginate/__stories__/Autoload.tsx","webpack:///./packages/react-select-async-paginate/__stories__/Creatable.tsx","webpack:///./packages/react-select-async-paginate/__stories__/CreatableWithNewOptions.tsx","webpack:///./packages/react-select-async-paginate/__stories__/CustomScrollCheck.tsx","webpack:///./packages/react-select-async-paginate/__stories__/Debounce.tsx","webpack:///./packages/react-select-async-paginate/__stories__/GroupedOptions.tsx","webpack:///./packages/react-select-async-paginate/__stories__/InitialOptions.tsx","webpack:///./packages/react-select-async-paginate/__stories__/Manual.tsx","webpack:///./packages/react-select-async-paginate/__stories__/Multi.tsx","webpack:///./packages/react-select-async-paginate/__stories__/RequestByPageNumber.tsx","webpack:///./packages/react-select-async-paginate/__stories__/Simple.tsx","webpack:///./packages/react-select-async-paginate/__stories__/index.stories.tsx","webpack:///./packages/react-select-async-paginate/src/defaultReduceOptions.ts","webpack:///./packages/react-select-async-paginate/src/defaultShouldLoadMore.ts","webpack:///./packages/react-select-async-paginate/src/index.ts","webpack:///./packages/react-select-async-paginate/src/reduceGroupedOptions.ts","webpack:///./packages/react-select-async-paginate/src/useAsyncPaginate.ts","webpack:///./packages/react-select-async-paginate/src/useAsyncPaginateBase.ts","webpack:///./packages/react-select-async-paginate/src/useComponents.ts","webpack:///./packages/react-select-async-paginate/src/withAsyncPaginate.tsx","webpack:///./packages/react-select-async-paginate/src/wrapMenuList.tsx","webpack:///./packages/react-select-fetch/__stories__/InitialOptions.tsx","webpack:///./packages/react-select-fetch/__stories__/ManualControl.tsx","webpack:///./packages/react-select-fetch/__stories__/Simple.tsx","webpack:///./packages/react-select-fetch/__stories__/index.stories.tsx","webpack:///./packages/react-select-fetch/src/withSelectFetch.tsx"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"components\", \"selectRef\", \"useComponents\", \"useAsyncPaginate\", \"cacheUniqs\"];\nimport { useAsyncPaginate } from './useAsyncPaginate';\nimport { useComponents } from './useComponents';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function withAsyncPaginate( // eslint-disable-next-line @typescript-eslint/naming-convention\nSelectComponent) {\n  var WithAsyncPaginate = function WithAsyncPaginate(props) {\n    var components = props.components,\n        selectRef = props.selectRef,\n        useComponentsProp = props.useComponents,\n        useAsyncPaginateProp = props.useAsyncPaginate,\n        cacheUniqs = props.cacheUniqs,\n        rest = _objectWithoutProperties(props, _excluded);\n\n    var asyncPaginateProps = useAsyncPaginateProp(rest, cacheUniqs);\n    var processedComponents = useComponentsProp(components);\n    return /*#__PURE__*/_jsx(SelectComponent, _objectSpread(_objectSpread(_objectSpread({}, props), asyncPaginateProps), {}, {\n      components: processedComponents,\n      ref: selectRef\n    }));\n  };\n\n  WithAsyncPaginate.defaultProps = {\n    selectRef: null,\n    cacheUniqs: [],\n    components: {},\n    useComponents: useComponents,\n    useAsyncPaginate: useAsyncPaginate\n  };\n  return WithAsyncPaginate;\n}","import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { useEffect, useRef, useCallback } from 'react';\nimport composeRefs from '@seznam/compose-react-refs';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var CHECK_TIMEOUT = 300;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport var wrapMenuList = function wrapMenuList(MenuList) {\n  var WrappedMenuList = function WrappedMenuList(props) {\n    var _props$selectProps = props.selectProps,\n        handleScrolledToBottom = _props$selectProps.handleScrolledToBottom,\n        shouldLoadMore = _props$selectProps.shouldLoadMore,\n        innerRef = props.innerRef,\n        useEffectProp = props.useEffect,\n        useRefProp = props.useRef,\n        useCallbackProp = props.useCallback,\n        setTimeoutProp = props.setTimeout,\n        clearTimeoutProp = props.clearTimeout;\n    var checkTimeoutRef = useRefProp(null);\n    var menuListRef = useRefProp(null);\n    var shouldHandle = useCallbackProp(function () {\n      var el = menuListRef.current; // menu not rendered\n\n      if (!el) {\n        return false;\n      }\n\n      var scrollTop = el.scrollTop,\n          scrollHeight = el.scrollHeight,\n          clientHeight = el.clientHeight;\n      return shouldLoadMore(scrollHeight, clientHeight, scrollTop);\n    }, [shouldLoadMore]);\n    var checkAndHandle = useCallbackProp(function () {\n      if (shouldHandle()) {\n        if (handleScrolledToBottom) {\n          handleScrolledToBottom();\n        }\n      }\n    }, [shouldHandle, handleScrolledToBottom]);\n    var setCheckAndHandleTimeout = useCallbackProp(function () {\n      checkAndHandle();\n      checkTimeoutRef.current = setTimeoutProp(setCheckAndHandleTimeout, CHECK_TIMEOUT);\n    }, [checkAndHandle]);\n    useEffectProp(function () {\n      setCheckAndHandleTimeout();\n      return function () {\n        if (checkTimeoutRef.current) {\n          clearTimeoutProp(checkTimeoutRef.current);\n        }\n      };\n    }, []);\n    return /*#__PURE__*/_jsx(MenuList, _objectSpread(_objectSpread({}, props), {}, {\n      innerRef: composeRefs(innerRef, menuListRef)\n    }));\n  };\n\n  WrappedMenuList.defaultProps = {\n    useEffect: useEffect,\n    useRef: useRef,\n    useCallback: useCallback,\n    setTimeout: setTimeout,\n    clearTimeout: clearTimeout\n  };\n  return WrappedMenuList;\n};","var map = {\n\t\"./react-select-async-paginate/__stories__/index.stories.tsx\": \"./packages/react-select-async-paginate/__stories__/index.stories.tsx\",\n\t\"./react-select-fetch/__stories__/index.stories.tsx\": \"./packages/react-select-fetch/__stories__/index.stories.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./packages sync recursive ^\\\\.(?:(?:^|\\\\/|(?:(?:(?!(?:^|\\\\/)\\\\.).)*?)\\\\/)(?!\\\\.)(?=.)[^/]*?\\\\.stories\\\\.tsx)$\";","import { useState } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\n\nimport { AsyncPaginate } from '../src';\nimport type {\n  LoadOptions,\n} from '../src';\n\ntype OptionType = {\n  value: number;\n  label: string;\n};\n\nconst options: OptionType[] = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst loadOptions: LoadOptions<OptionType, null> = async (search, prevOptions) => {\n  await sleep(1000);\n\n  let filteredOptions;\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = filteredOptions.length > prevOptions.length + 10;\n  const slicedOptions = filteredOptions.slice(\n    prevOptions.length,\n    prevOptions.length + 10,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <AsyncPaginate\n        defaultOptions\n        value={value}\n        loadOptions={loadOptions}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Example;\n","import { useState } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\nimport Creatable from 'react-select/creatable';\n\nimport { withAsyncPaginate } from '../src';\nimport type {\n  LoadOptions,\n} from '../src';\n\nconst AsyncPaginateCreatable = withAsyncPaginate(Creatable);\n\ntype OptionType = {\n  value: number | string;\n  label: string;\n};\n\nconst options = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst loadOptions: LoadOptions<OptionType, null> = async (search, prevOptions) => {\n  await sleep(1000);\n\n  let filteredOptions;\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = filteredOptions.length > prevOptions.length + 10;\n  const slicedOptions = filteredOptions.slice(\n    prevOptions.length,\n    prevOptions.length + 10,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <AsyncPaginateCreatable\n        value={value}\n        loadOptions={loadOptions}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Example;\n","import { useState, useCallback } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\nimport Creatable from 'react-select/creatable';\n\nimport { withAsyncPaginate } from '../src';\nimport type {\n  LoadOptions,\n} from '../src';\n\nconst AsyncPaginateCreatable = withAsyncPaginate(Creatable);\n\ntype OptionType = {\n  value: number | string;\n  label: string;\n};\n\nconst options: OptionType[] = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst loadOptions: LoadOptions<OptionType, null> = async (search, prevOptions) => {\n  await sleep(1000);\n\n  let filteredOptions;\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = filteredOptions.length > prevOptions.length + 10;\n  const slicedOptions = filteredOptions.slice(\n    prevOptions.length,\n    prevOptions.length + 10,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst addNewOption = async (inputValue: string): Promise<OptionType> => {\n  await sleep(1000);\n\n  const newOption = {\n    label: inputValue,\n    value: inputValue,\n  };\n\n  options.push(newOption);\n\n  return newOption;\n};\n\nconst increaseUniq = (uniq: number): number => uniq + 1;\n\nconst Example: FC = () => {\n  const [cacheUniq, setCacheUniq] = useState(0);\n  const [isAddingInProgress, setIsAddingInProgress] = useState(false);\n  const [value, onChange] = useState(null);\n\n  const onCreateOption = useCallback(async (inputValue) => {\n    setIsAddingInProgress(true);\n\n    const newOption = await addNewOption(inputValue);\n\n    setIsAddingInProgress(false);\n    setCacheUniq(increaseUniq);\n    onChange(newOption);\n  }, []);\n\n  return (\n    <>\n      <div\n        style={{\n          maxWidth: 300,\n        }}\n      >\n        <AsyncPaginateCreatable\n          isDisabled={isAddingInProgress}\n          value={value}\n          loadOptions={loadOptions}\n          onCreateOption={onCreateOption}\n          onChange={onChange}\n          cacheUniq={cacheUniq}\n        />\n      </div>\n\n      <p>\n        Current value is\n        {' '}\n        {JSON.stringify(value)}\n      </p>\n    </>\n  );\n};\n\nexport default Example;\n","import { useState } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\n\nimport { AsyncPaginate } from '../src';\nimport type {\n  LoadOptions,\n  ShouldLoadMore,\n} from '../src';\n\ntype OptionType = {\n  value: number;\n  label: string;\n};\n\nconst options = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst loadOptions: LoadOptions<OptionType, null> = async (search, prevOptions) => {\n  await sleep(1000);\n\n  let filteredOptions;\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = filteredOptions.length > prevOptions.length + 10;\n  const slicedOptions = filteredOptions.slice(\n    prevOptions.length,\n    prevOptions.length + 10,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst shouldLoadMore: ShouldLoadMore = (scrollHeight, clientHeight, scrollTop) => {\n  const bottomBorder = (scrollHeight - clientHeight) / 2;\n\n  return bottomBorder < scrollTop;\n};\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <p>New options will load when scrolling to half</p>\n\n      <AsyncPaginate\n        value={value}\n        loadOptions={loadOptions}\n        onChange={onChange}\n        shouldLoadMore={shouldLoadMore}\n      />\n    </div>\n  );\n};\n\nexport default Example;\n","import { useState } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\n\nimport { AsyncPaginate } from '../src';\nimport type {\n  LoadOptions,\n} from '../src';\n\ntype OptionType = {\n  value: number;\n  label: string;\n};\n\nconst options: OptionType[] = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst loadOptions: LoadOptions<OptionType, null> = async (search, prevOptions) => {\n  await sleep(1000);\n\n  let filteredOptions;\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = filteredOptions.length > prevOptions.length + 10;\n  const slicedOptions = filteredOptions.slice(\n    prevOptions.length,\n    prevOptions.length + 10,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst increase = (numberOfRequests: number): number => numberOfRequests + 1;\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n  const [numberOfRequests, setNumberOfRequests] = useState(0);\n\n  const wrappedLoadOptions: LoadOptions<OptionType, null> = (inputValue, prevOptions) => {\n    setNumberOfRequests(increase);\n\n    return loadOptions(inputValue, prevOptions);\n  };\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <p>\n        Number of requests:\n        {' '}\n        {numberOfRequests}\n      </p>\n\n      <AsyncPaginate\n        debounceTimeout={300}\n        value={value}\n        loadOptions={wrappedLoadOptions}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Example;\n","import { useState } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\n\nimport { AsyncPaginate, reduceGroupedOptions } from '../src';\nimport type {\n  LoadOptions,\n} from '../src';\n\ntype OptionType = {\n  value: number | string;\n  type: number;\n  label: string;\n};\n\ntype Additional = {\n  page: number;\n};\n\nconst options: OptionType[] = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    type: Math.ceil(Math.random() * 3),\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst optionsPerPage = 10;\n\nconst loadOptions = async (search: string, page: number): Promise<{\n  options: {\n    label: string;\n    options: OptionType[];\n  }[];\n  hasMore: boolean;\n}> => {\n  await sleep(1000);\n\n  let filteredOptions: OptionType[];\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = Math.ceil(filteredOptions.length / optionsPerPage) > page;\n  const slicedOptions = filteredOptions.slice(\n    (page - 1) * optionsPerPage,\n    page * optionsPerPage,\n  );\n\n  const mapTypeToIndex = new Map<number, number>();\n\n  const result = [];\n\n  slicedOptions.forEach((option) => {\n    const { type } = option;\n\n    if (mapTypeToIndex.has(type)) {\n      const index = mapTypeToIndex.get(type);\n\n      result[index].options.push(option);\n    } else {\n      const index = result.length;\n\n      mapTypeToIndex.set(type, index);\n\n      result.push({\n        label: `Type #${type}`,\n        options: [option],\n      });\n    }\n  });\n\n  return {\n    options: result,\n    hasMore,\n  };\n};\n\nconst wrapperdLoadOptions: LoadOptions<OptionType, Additional> = async (\n  q,\n  prevOptions,\n  {\n    page,\n  },\n) => {\n  const {\n    options: responseOptions,\n    hasMore,\n  } = await loadOptions(q, page);\n\n  return {\n    options: responseOptions,\n    hasMore,\n\n    additional: {\n      page: page + 1,\n    },\n  };\n};\n\nconst defaultAdditional = {\n  page: 1,\n};\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <AsyncPaginate\n        additional={defaultAdditional}\n        value={value}\n        loadOptions={wrapperdLoadOptions}\n        onChange={onChange}\n        reduceOptions={reduceGroupedOptions}\n      />\n    </div>\n  );\n};\n\nexport default Example;\n","import { useState } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\n\nimport { AsyncPaginate } from '../src';\nimport type {\n  LoadOptions,\n} from '../src';\n\ntype OptionType = {\n  value: number;\n  label: string;\n};\n\nconst options: OptionType[] = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst loadOptions: LoadOptions<OptionType, null> = async (search, prevOptions) => {\n  await sleep(1000);\n\n  let filteredOptions;\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = filteredOptions.length > prevOptions.length + 10;\n  const slicedOptions = filteredOptions.slice(\n    prevOptions.length,\n    prevOptions.length + 10,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst initialOptions = options.slice(0, 10);\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <AsyncPaginate\n        options={initialOptions}\n        value={value}\n        loadOptions={loadOptions}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Example;\n","/* eslint-disable react/no-array-index-key */\n\nimport { useState, useCallback } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\nimport type { InputActionMeta } from 'react-select';\n\nimport { AsyncPaginate } from '../src';\nimport type {\n  LoadOptions,\n} from '../src';\n\ntype OptionType = {\n  value: number;\n  label: string;\n};\n\nconst options = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst loadOptions: LoadOptions<OptionType, null> = async (search, prevOptions) => {\n  await sleep(1000);\n\n  let filteredOptions;\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = filteredOptions.length > prevOptions.length + 10;\n  const slicedOptions = filteredOptions.slice(\n    prevOptions.length,\n    prevOptions.length + 10,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n  const [inputValue, onInputChangeRaw] = useState('');\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const [inputHistory, setInputHistory] = useState([]);\n\n  const onInputChange = useCallback((\n    newInputValue: string,\n    {\n      action,\n    }: InputActionMeta,\n  ): void => {\n    setInputHistory((prevInputHistory) => [\n      ...prevInputHistory,\n      {\n        inputValue: newInputValue,\n        action,\n      },\n    ]);\n\n    onInputChangeRaw(newInputValue);\n  }, []);\n\n  const onMenuOpen = useCallback((): void => {\n    setMenuIsOpen(true);\n  }, []);\n\n  const onMenuClose = useCallback((): void => {\n    setMenuIsOpen(false);\n  }, []);\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <div>\n        <button type=\"button\" onClick={onMenuOpen}>\n          Open menu\n        </button>\n\n        <button type=\"button\" onClick={onMenuClose}>\n          Close menu\n        </button>\n      </div>\n\n      <AsyncPaginate\n        isMulti\n        closeMenuOnSelect={false}\n        value={value}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        loadOptions={loadOptions}\n        onChange={onChange}\n        menuIsOpen={menuIsOpen}\n        onMenuOpen={onMenuOpen}\n        onMenuClose={onMenuClose}\n      />\n\n      <h2>Input value history</h2>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Action</th>\n\n            <th>Value</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {inputHistory.map((historyItem, index) => (\n            <tr key={index}>\n              <td>{historyItem.action}</td>\n\n              <td>{historyItem.inputValue}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Example;\n","import { useState } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\n\nimport { AsyncPaginate } from '../src';\nimport type {\n  LoadOptions,\n} from '../src';\n\ntype OptionType = {\n  value: number;\n  label: string;\n};\n\nconst options = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst loadOptions: LoadOptions<OptionType, null> = async (search, prevOptions) => {\n  await sleep(1000);\n\n  let filteredOptions: OptionType[];\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = filteredOptions.length > prevOptions.length + 10;\n  const slicedOptions = filteredOptions.slice(\n    prevOptions.length,\n    prevOptions.length + 10,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <AsyncPaginate\n        isMulti\n        value={value}\n        loadOptions={loadOptions}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Example;\n","import { useState } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\n\nimport { AsyncPaginate } from '../src';\nimport type {\n  LoadOptions,\n} from '../src';\n\nconst options = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\ntype OptionType = {\n  value: number;\n  label: string;\n};\n\ntype Additional = {\n  page: number;\n};\n\nconst optionsPerPage = 10;\n\nconst loadOptions = async (search: string, page: number): Promise<{\n  options: OptionType[];\n  hasMore: boolean;\n}> => {\n  await sleep(1000);\n\n  let filteredOptions;\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = Math.ceil(filteredOptions.length / optionsPerPage) > page;\n  const slicedOptions = filteredOptions.slice(\n    (page - 1) * optionsPerPage,\n    page * optionsPerPage,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst defaultAdditional = {\n  page: 1,\n};\n\nconst loadPageOptions: LoadOptions<OptionType, Additional> = async (q, prevOptions, { page }) => {\n  const {\n    options: responseOptions,\n    hasMore,\n  } = await loadOptions(q, page);\n\n  return {\n    options: responseOptions,\n    hasMore,\n\n    additional: {\n      page: page + 1,\n    },\n  };\n};\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <AsyncPaginate\n        additional={defaultAdditional}\n        value={value}\n        loadOptions={loadPageOptions}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Example;\n","import { useState } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\n\nimport { AsyncPaginate } from '../src';\nimport type {\n  LoadOptions,\n} from '../src';\n\ntype OptionType = {\n  value: number;\n  label: string;\n};\n\nconst options = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst loadOptions: LoadOptions<OptionType, null> = async (search, prevOptions) => {\n  await sleep(1000);\n\n  let filteredOptions: OptionType[];\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = filteredOptions.length > prevOptions.length + 10;\n  const slicedOptions = filteredOptions.slice(\n    prevOptions.length,\n    prevOptions.length + 10,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <AsyncPaginate\n        value={value}\n        loadOptions={loadOptions}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Example;\n","import { storiesOf } from '@storybook/react';\n\nimport Simple from './Simple';\nimport Multi from './Multi';\nimport Creatable from './Creatable';\nimport CreatableWithNewOptions from './CreatableWithNewOptions';\nimport InitialOptions from './InitialOptions';\nimport Autoload from './Autoload';\nimport Debounce from './Debounce';\nimport RequestByPageNumber from './RequestByPageNumber';\nimport CustomScrollCheck from './CustomScrollCheck';\nimport GroupedOptions from './GroupedOptions';\nimport Manual from './Manual';\n\nstoriesOf('react-select-async-paginate', module)\n  .add('Simple', () => <Simple />)\n  .add('Multi', () => <Multi />)\n  .add('Creatable', () => <Creatable />)\n  .add('Creatable with adding new options', () => <CreatableWithNewOptions />)\n  .add('Intial options', () => <InitialOptions />)\n  .add('Autoload', () => <Autoload />)\n  .add('Debounce', () => <Debounce />)\n  .add('Request by page number', () => <RequestByPageNumber />)\n  .add('Customization check of the need of load options', () => <CustomScrollCheck />)\n  .add('Grouped options', () => <GroupedOptions />)\n  .add('Manual control of input value and menu opening', () => <Manual />);\n","import type {\n  ReduceOptions,\n} from './types';\n\nexport const defaultReduceOptions: ReduceOptions<any, any> = (\n  prevOptions,\n  loadedOptions,\n) => [...prevOptions, ...loadedOptions];\n","import type {\n  ShouldLoadMore,\n} from './types';\n\nconst AVAILABLE_DELTA = 10;\n\nexport const defaultShouldLoadMore: ShouldLoadMore = (scrollHeight, clientHeight, scrollTop) => {\n  const bottomBorder = scrollHeight - clientHeight - AVAILABLE_DELTA;\n\n  return bottomBorder < scrollTop;\n};\n","import Select from 'react-select';\n\nimport { withAsyncPaginate } from './withAsyncPaginate';\n\nexport { wrapMenuList } from './wrapMenuList';\nexport { reduceGroupedOptions } from './reduceGroupedOptions';\n\nexport { withAsyncPaginate };\n\nexport { useAsyncPaginateBase } from './useAsyncPaginateBase';\nexport { useAsyncPaginate } from './useAsyncPaginate';\nexport { useComponents } from './useComponents';\n\nexport const AsyncPaginate = withAsyncPaginate(Select);\n\nexport type {\n  OptionsList,\n  ReduceOptions,\n  OptionsCacheItem,\n  OptionsCache,\n  ShouldLoadMore,\n  Response,\n  LoadOptions,\n  FilterOption,\n  UseAsyncPaginateBaseResult,\n  UseAsyncPaginateResult,\n  UseAsyncPaginateParams,\n  UseAsyncPaginateBaseParams,\n  ComponentProps,\n} from './types';\n","import type {\n  ReduceOptions,\n} from './types';\n\nexport const reduceGroupedOptions: ReduceOptions<any, any> = (prevOptions, loadedOptions) => {\n  const res = prevOptions.slice();\n\n  const mapLabelToIndex = {};\n  let prevOptionsIndex = 0;\n  const prevOptionsLength = prevOptions.length;\n\n  loadedOptions.forEach((group) => {\n    const {\n      label,\n    } = group;\n\n    let groupIndex = mapLabelToIndex[label];\n    if (typeof groupIndex !== 'number') {\n      for (;\n        prevOptionsIndex < prevOptionsLength && typeof mapLabelToIndex[label] !== 'number';\n        ++prevOptionsIndex\n      ) {\n        const prevGroup = prevOptions[prevOptionsIndex];\n        mapLabelToIndex[prevGroup.label] = prevOptionsIndex;\n      }\n\n      groupIndex = mapLabelToIndex[label];\n    }\n\n    if (typeof groupIndex !== 'number') {\n      mapLabelToIndex[label] = res.length;\n      res.push(group);\n      return;\n    }\n\n    res[groupIndex] = {\n      ...res[groupIndex],\n      options: res[groupIndex].options.concat(group.options),\n    };\n  });\n\n  return res;\n};\n","import {\n  useState,\n  useCallback,\n} from 'react';\nimport type {\n  InputActionMeta,\n} from 'react-select';\n\nimport {\n  useAsyncPaginateBase,\n} from './useAsyncPaginateBase';\n\nimport type {\n  UseAsyncPaginateParams,\n  UseAsyncPaginateBaseParams,\n  UseAsyncPaginateBaseResult,\n  UseAsyncPaginateResult,\n} from './types';\n\nexport const useAsyncPaginatePure = <OptionType, Additional>(\n  useStateParam: typeof useState,\n  useCallbackParam: typeof useCallback,\n\n  useAsyncPaginateBaseParam: (\n    params: UseAsyncPaginateBaseParams<OptionType, Additional>,\n    deps: ReadonlyArray<any>,\n  ) => UseAsyncPaginateBaseResult<OptionType>,\n\n  params: UseAsyncPaginateParams<OptionType, Additional>,\n  deps: ReadonlyArray<any> = [],\n): UseAsyncPaginateResult<OptionType> => {\n  const {\n    inputValue: inputValueParam,\n    menuIsOpen: menuIsOpenParam,\n    defaultInputValue: defaultInputValueParam,\n    defaultMenuIsOpen: defaultMenuIsOpenParam,\n    onInputChange: onInputChangeParam,\n    onMenuClose: onMenuCloseParam,\n    onMenuOpen: onMenuOpenParam,\n  } = params;\n\n  const [inputValueState, setInputValue] = useStateParam(\n    defaultInputValueParam || '',\n  );\n  const [menuIsOpenState, setMenuIsOpen] = useStateParam(\n    !!defaultMenuIsOpenParam,\n  );\n\n  const inputValue: string = typeof inputValueParam === 'string'\n    ? inputValueParam\n    : inputValueState;\n\n  const menuIsOpen: boolean = typeof menuIsOpenParam === 'boolean'\n    ? menuIsOpenParam\n    : menuIsOpenState;\n\n  const onInputChange = useCallbackParam((\n    nextInputValue: string,\n    actionMeta: InputActionMeta,\n  ): void => {\n    if (onInputChangeParam) {\n      onInputChangeParam(nextInputValue, actionMeta);\n    }\n\n    setInputValue(nextInputValue);\n  }, [onInputChangeParam]);\n\n  const onMenuClose = useCallbackParam((): void => {\n    if (onMenuCloseParam) {\n      onMenuCloseParam();\n    }\n\n    setMenuIsOpen(false);\n  }, [onMenuCloseParam]);\n\n  const onMenuOpen = useCallbackParam((): void => {\n    if (onMenuOpenParam) {\n      onMenuOpenParam();\n    }\n\n    setMenuIsOpen(true);\n  }, [onMenuOpenParam]);\n\n  const baseResult: UseAsyncPaginateBaseResult<OptionType> = useAsyncPaginateBaseParam(\n    {\n      ...params,\n      inputValue,\n      menuIsOpen,\n    },\n    deps,\n  );\n\n  return {\n    ...baseResult,\n    inputValue,\n    menuIsOpen,\n    onInputChange,\n    onMenuClose,\n    onMenuOpen,\n  };\n};\n\nexport const useAsyncPaginate = <OptionType, Additional>(\n  params: UseAsyncPaginateParams<OptionType, Additional>,\n  deps: ReadonlyArray<any> = [],\n): UseAsyncPaginateResult<OptionType> => useAsyncPaginatePure<OptionType, Additional>(\n    useState,\n    useCallback,\n    useAsyncPaginateBase,\n    params,\n    deps,\n  );\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\nimport sleep from 'sleep-promise';\nimport useIsMounted from 'react-is-mounted-hook';\n\nimport { defaultShouldLoadMore } from './defaultShouldLoadMore';\nimport { defaultReduceOptions } from './defaultReduceOptions';\n\nimport type {\n  OptionsCache,\n  OptionsCacheItem,\n  UseAsyncPaginateBaseResult,\n  UseAsyncPaginateBaseParams,\n  ReduceOptions,\n} from './types';\n\nconst errorText = '[react-select-async-paginate] response of \"loadOptions\" should be an object with \"options\" prop, which contains array of options.';\n\nexport const validateResponse = (\n  console: Console,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  response: any,\n): void => {\n  if (!response) {\n    console.error(errorText, 'Received:', response);\n    throw new Error(errorText);\n  }\n\n  if (!Array.isArray(response.options)) {\n    console.error(errorText, 'Received:', response);\n    throw new Error(errorText);\n  }\n};\n\nexport const getInitialOptionsCache = <OptionType, Additional>({\n  options,\n  defaultOptions,\n  additional,\n  defaultAdditional,\n}: UseAsyncPaginateBaseParams<OptionType, Additional>): OptionsCache<OptionType, Additional> => {\n  const initialOptions = defaultOptions === true\n    ? null\n    : (defaultOptions instanceof Array)\n      ? defaultOptions\n      : options;\n\n  if (initialOptions) {\n    return {\n      '': {\n        isFirstLoad: false,\n        isLoading: false,\n        options: initialOptions,\n        hasMore: true,\n        additional: defaultAdditional || additional,\n      },\n    };\n  }\n\n  return {};\n};\n\nexport const getInitialCache = <OptionType, Additional>(\n  params: UseAsyncPaginateBaseParams<OptionType, Additional>,\n): OptionsCacheItem<OptionType, Additional> => ({\n    isFirstLoad: true,\n    options: [],\n    hasMore: true,\n    isLoading: false,\n    additional: params.additional,\n  });\n\ntype MapOptionsCache<OptionType, Additional> = (\n  prevCache: OptionsCache<OptionType, Additional>,\n) => OptionsCache<OptionType, Additional>;\n\ntype SetOptionsCache<OptionType, Additional> = (\n  stateMapper: MapOptionsCache<OptionType, Additional>,\n) => void;\n\nexport const requestOptions = async <OptionType, Additional>(\n  paramsRef: {\n    current: UseAsyncPaginateBaseParams<OptionType, Additional>;\n  },\n  optionsCacheRef: {\n    current: OptionsCache<OptionType, Additional>;\n  },\n  debounceTimeout: number,\n  sleepParam: typeof sleep,\n  setOptionsCache: SetOptionsCache<OptionType, Additional>,\n  validateResponseParam: typeof validateResponse,\n  reduceOptions: ReduceOptions<OptionType, Additional>,\n): Promise<void> => {\n  const currentInputValue = paramsRef.current.inputValue;\n\n  const isCacheEmpty = !optionsCacheRef.current[currentInputValue];\n\n  const currentOptions: OptionsCacheItem<OptionType, Additional> = isCacheEmpty\n    ? getInitialCache(paramsRef.current)\n    : optionsCacheRef.current[currentInputValue];\n\n  if (currentOptions.isLoading || !currentOptions.hasMore) {\n    return;\n  }\n\n  setOptionsCache((\n    prevOptionsCache: OptionsCache<OptionType, Additional>,\n  ): OptionsCache<OptionType, Additional> => ({\n    ...prevOptionsCache,\n    [currentInputValue]: {\n      ...currentOptions,\n      isLoading: true,\n    },\n  }));\n\n  if (debounceTimeout > 0) {\n    await sleepParam(debounceTimeout);\n\n    const newInputValue = paramsRef.current.inputValue;\n\n    if (currentInputValue !== newInputValue) {\n      setOptionsCache((prevOptionsCache) => {\n        if (isCacheEmpty) {\n          const {\n            [currentInputValue]: itemForDelete,\n            ...restCache\n          } = prevOptionsCache;\n\n          return restCache;\n        }\n\n        return {\n          ...prevOptionsCache,\n          [currentInputValue]: {\n            ...currentOptions,\n            isLoading: false,\n          },\n        };\n      });\n\n      return;\n    }\n  }\n\n  let response;\n  let hasError;\n\n  try {\n    const {\n      loadOptions,\n    } = paramsRef.current;\n\n    response = await loadOptions(\n      currentInputValue,\n      currentOptions.options,\n      currentOptions.additional,\n    );\n\n    hasError = false;\n  } catch (e) {\n    hasError = true;\n  }\n\n  if (hasError) {\n    setOptionsCache((prevOptionsCache) => ({\n      ...prevOptionsCache,\n      [currentInputValue]: {\n        ...currentOptions,\n        isLoading: false,\n      },\n    }));\n\n    return;\n  }\n\n  validateResponseParam(console, response);\n\n  const {\n    options,\n    hasMore,\n  } = response;\n\n  // eslint-disable-next-line no-prototype-builtins\n  const newAdditional = response.hasOwnProperty('additional')\n    ? response.additional\n    : currentOptions.additional;\n\n  setOptionsCache((prevOptionsCache) => ({\n    ...prevOptionsCache,\n    [currentInputValue]: {\n      ...currentOptions,\n      options: reduceOptions(currentOptions.options, options, newAdditional),\n      hasMore: !!hasMore,\n      isLoading: false,\n      isFirstLoad: false,\n      additional: newAdditional,\n    },\n  }));\n};\n\nexport const increaseStateId = (prevStateId: number): number => prevStateId + 1;\n\nexport const useAsyncPaginateBasePure = <OptionType, Additional>(\n  useRefParam: typeof useRef,\n  useStateParam: typeof useState,\n  useEffectParam: typeof useEffect,\n  useCallbackParam: typeof useCallback,\n  useIsMountedParam: typeof useIsMounted,\n  validateResponseParam: typeof validateResponse,\n  getInitialOptionsCacheParam: typeof getInitialOptionsCache,\n  requestOptionsParam: typeof requestOptions,\n  params: UseAsyncPaginateBaseParams<OptionType, Additional>,\n  deps: ReadonlyArray<any> = [],\n): UseAsyncPaginateBaseResult<OptionType> => {\n  const {\n    defaultOptions,\n    loadOptionsOnMenuOpen = true,\n    debounceTimeout = 0,\n    inputValue,\n    menuIsOpen,\n    filterOption = null,\n    reduceOptions = defaultReduceOptions,\n    shouldLoadMore = defaultShouldLoadMore,\n  } = params;\n\n  const isMounted = useIsMountedParam();\n\n  const isInitRef = useRefParam<boolean>(true);\n  const paramsRef = useRefParam<UseAsyncPaginateBaseParams<OptionType, Additional>>(params);\n\n  paramsRef.current = params;\n\n  const setStateId = useStateParam(0)[1];\n\n  const optionsCacheRef = useRefParam<OptionsCache<OptionType, Additional>>(null);\n\n  if (optionsCacheRef.current === null) {\n    optionsCacheRef.current = getInitialOptionsCacheParam(params);\n  }\n\n  const callRequestOptions = useCallbackParam((): void => {\n    requestOptionsParam(\n      paramsRef,\n      optionsCacheRef,\n      debounceTimeout,\n      sleep,\n      (reduceState) => {\n        optionsCacheRef.current = reduceState(optionsCacheRef.current);\n\n        if (isMounted()) {\n          setStateId(increaseStateId);\n        }\n      },\n      validateResponseParam,\n      reduceOptions,\n    );\n  }, []);\n\n  const handleScrolledToBottom = useCallbackParam((): void => {\n    const currentInputValue = paramsRef.current.inputValue;\n    const currentOptions = optionsCacheRef.current[currentInputValue];\n\n    if (currentOptions) {\n      callRequestOptions();\n    }\n  }, []);\n\n  useEffectParam(() => {\n    if (isInitRef.current) {\n      isInitRef.current = false;\n    } else {\n      optionsCacheRef.current = {};\n      setStateId(increaseStateId);\n    }\n\n    if (defaultOptions === true) {\n      callRequestOptions();\n    }\n  }, deps);\n\n  useEffectParam(() => {\n    if (menuIsOpen && !optionsCacheRef.current[inputValue]) {\n      callRequestOptions();\n    }\n  }, [inputValue]);\n\n  useEffectParam(() => {\n    if (\n      menuIsOpen\n      && !optionsCacheRef.current['']\n      && loadOptionsOnMenuOpen\n    ) {\n      callRequestOptions();\n    }\n  }, [menuIsOpen]);\n\n  const currentOptions: OptionsCacheItem<\n  OptionType,\n  Additional\n  > = optionsCacheRef.current[inputValue]\n    || getInitialCache(params);\n\n  return {\n    handleScrolledToBottom,\n    shouldLoadMore,\n    filterOption,\n    isLoading: currentOptions.isLoading,\n    isFirstLoad: currentOptions.isFirstLoad,\n    options: currentOptions.options,\n  };\n};\n\nexport const useAsyncPaginateBase = <OptionType, Additional>(\n  params: UseAsyncPaginateBaseParams<OptionType, Additional>,\n  deps: ReadonlyArray<any> = [],\n): UseAsyncPaginateBaseResult<OptionType> => useAsyncPaginateBasePure<OptionType, Additional>(\n    useRef,\n    useState,\n    useEffect,\n    useCallback,\n    useIsMounted,\n    validateResponse,\n    getInitialOptionsCache,\n    requestOptions,\n    params,\n    deps,\n  );\n","import {\n  useMemo,\n} from 'react';\nimport type {\n  ComponentType,\n} from 'react';\nimport type {\n  MenuListComponentProps,\n  SelectComponentsConfig,\n} from 'react-select';\n\nimport { components as defaultComponents } from 'react-select';\n\nimport { wrapMenuList } from './wrapMenuList';\n\nexport const MenuList = wrapMenuList(defaultComponents.MenuList);\n\nexport const useComponentsPure = <OptionType, IsMulti extends boolean>(\n  useMemoParam: typeof useMemo,\n  components: SelectComponentsConfig<OptionType, IsMulti>,\n): SelectComponentsConfig<OptionType, IsMulti> => useMemoParam(() => ({\n    MenuList: (MenuList as unknown as ComponentType<MenuListComponentProps<OptionType, IsMulti>>),\n    ...components,\n  }), [components]);\n\nexport const useComponents = <OptionType, IsMulti extends boolean>(\n  components: SelectComponentsConfig<OptionType, IsMulti>,\n): SelectComponentsConfig<OptionType, IsMulti> => useComponentsPure(\n    useMemo,\n    components,\n  );\n","import type {\n  FC,\n  ComponentType,\n} from 'react';\nimport type {\n  Props as SelectProps,\n} from 'react-select';\n\nimport {\n  useAsyncPaginate,\n} from './useAsyncPaginate';\nimport {\n  useComponents,\n} from './useComponents';\n\nimport type {\n  UseAsyncPaginateResult,\n  UseAsyncPaginateParams,\n  ComponentProps,\n} from './types';\n\nexport type Props<OptionType, Additional, IsMulti extends boolean> =\n  & SelectProps<OptionType, IsMulti>\n  & UseAsyncPaginateParams<OptionType, Additional>\n  & ComponentProps\n  & {\n    useComponents?: typeof useComponents;\n    useAsyncPaginate?: typeof useAsyncPaginate;\n  };\n\nexport function withAsyncPaginate<\nOptionType,\nAdditional,\nIsMulti extends boolean,\n>(\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  SelectComponent: ComponentType<SelectProps<OptionType, IsMulti>>,\n): FC<Props<OptionType, Additional, IsMulti>> {\n  const WithAsyncPaginate: FC<Props<OptionType, Additional, IsMulti>> = (props) => {\n    const {\n      components,\n      selectRef,\n      useComponents: useComponentsProp,\n      useAsyncPaginate: useAsyncPaginateProp,\n      cacheUniqs,\n      ...rest\n    } = props;\n\n    const asyncPaginateProps: UseAsyncPaginateResult<OptionType> = useAsyncPaginateProp(\n      rest,\n      cacheUniqs,\n    );\n\n    const processedComponents = useComponentsProp<OptionType, IsMulti>(components);\n\n    return (\n      <SelectComponent\n        {...props}\n        {...asyncPaginateProps}\n        components={processedComponents}\n        ref={selectRef}\n      />\n    );\n  };\n\n  WithAsyncPaginate.defaultProps = {\n    selectRef: null,\n    cacheUniqs: [],\n    components: {},\n    useComponents,\n    useAsyncPaginate,\n  };\n\n  return WithAsyncPaginate;\n}\n","import {\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\nimport type {\n  ComponentType,\n  FC,\n  Ref,\n} from 'react';\nimport composeRefs from '@seznam/compose-react-refs';\n\nimport type {\n  ShouldLoadMore,\n} from './types';\n\nexport const CHECK_TIMEOUT = 300;\n\nexport type Props = {\n  selectProps: {\n    handleScrolledToBottom?: () => void;\n    shouldLoadMore: ShouldLoadMore;\n  };\n\n  innerRef: Ref<HTMLElement>;\n\n  useEffect?: typeof useEffect;\n  useRef?: typeof useRef;\n  useCallback?: typeof useCallback;\n  setTimeout?: typeof setTimeout;\n  clearTimeout?: typeof clearTimeout;\n\n  [key: string]: any;\n};\n\ntype ComponentProps = {\n  innerRef: Ref<HTMLElement>;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const wrapMenuList = (MenuList: ComponentType<ComponentProps>): FC<Props> => {\n  const WrappedMenuList: FC<Props> = (props) => {\n    const {\n      selectProps: {\n        handleScrolledToBottom,\n        shouldLoadMore,\n      },\n      innerRef,\n\n      useEffect: useEffectProp,\n      useRef: useRefProp,\n      useCallback: useCallbackProp,\n\n      setTimeout: setTimeoutProp,\n      clearTimeout: clearTimeoutProp,\n    } = props;\n\n    const checkTimeoutRef = useRefProp(null);\n    const menuListRef = useRefProp<HTMLElement>(null);\n\n    const shouldHandle = useCallbackProp(() => {\n      const el = menuListRef.current;\n\n      // menu not rendered\n      if (!el) {\n        return false;\n      }\n\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n      } = el;\n\n      return shouldLoadMore(scrollHeight, clientHeight, scrollTop);\n    }, [shouldLoadMore]);\n\n    const checkAndHandle = useCallbackProp(() => {\n      if (shouldHandle()) {\n        if (handleScrolledToBottom) {\n          handleScrolledToBottom();\n        }\n      }\n    }, [shouldHandle, handleScrolledToBottom]);\n\n    const setCheckAndHandleTimeout = useCallbackProp(() => {\n      checkAndHandle();\n\n      checkTimeoutRef.current = setTimeoutProp(setCheckAndHandleTimeout, CHECK_TIMEOUT);\n    }, [checkAndHandle]);\n\n    useEffectProp(() => {\n      setCheckAndHandleTimeout();\n\n      return (): void => {\n        if (checkTimeoutRef.current) {\n          clearTimeoutProp(checkTimeoutRef.current);\n        }\n      };\n    }, []);\n\n    return (\n      <MenuList\n        {...props}\n        innerRef={composeRefs<HTMLElement>(innerRef, menuListRef)}\n      />\n    );\n  };\n\n  WrappedMenuList.defaultProps = {\n    useEffect,\n    useRef,\n    useCallback,\n    setTimeout,\n    clearTimeout,\n  };\n\n  return WrappedMenuList;\n};\n","import { useState } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\n\nimport { SelectFetch } from '../src';\nimport type { Get } from '../src';\n\nconst options = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst get: Get = async (url, {\n  search,\n  offset,\n  limit,\n}) => {\n  await sleep(1000);\n\n  let filteredOptions;\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = filteredOptions.length > offset + limit;\n  const slicedOptions = filteredOptions.slice(\n    offset,\n    offset + 10,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst defaultOptions = options.slice(0, 10);\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <SelectFetch\n        url=\"/options/\"\n        defaultOptions={defaultOptions}\n        queryParams={{\n          limit: 10,\n        }}\n        value={value}\n        onChange={onChange}\n        get={get}\n      />\n    </div>\n  );\n};\n\nexport default Example;\n","/* eslint-disable react/no-array-index-key */\n\nimport { useState, useCallback } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\nimport type { InputActionMeta } from 'react-select';\n\nimport { SelectFetch } from '../src';\nimport type { Get } from '../src';\n\nconst options = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst get: Get = async (url, {\n  search,\n  offset,\n  limit,\n}) => {\n  await sleep(1000);\n\n  let filteredOptions;\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = filteredOptions.length > offset + limit;\n  const slicedOptions = filteredOptions.slice(\n    offset,\n    offset + 10,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n  const [inputValue, onInputChangeRaw] = useState<string>('');\n  const [menuIsOpen, setMenuIsOpen] = useState<boolean>(false);\n  const [inputHistory, setInputHistory] = useState([]);\n\n  const onInputChange = useCallback((\n    newInputValue: string,\n    {\n      action,\n    }: InputActionMeta,\n  ): void => {\n    setInputHistory((prevInputHistory) => [\n      ...prevInputHistory,\n      {\n        inputValue: newInputValue,\n        action,\n      },\n    ]);\n\n    onInputChangeRaw(newInputValue);\n  }, []);\n\n  const onMenuOpen = useCallback((): void => {\n    setMenuIsOpen(true);\n  }, []);\n\n  const onMenuClose = useCallback((): void => {\n    setMenuIsOpen(false);\n  }, []);\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <div>\n        <button type=\"button\" onClick={onMenuOpen}>\n          Open menu\n        </button>\n\n        <button type=\"button\" onClick={onMenuClose}>\n          Close menu\n        </button>\n      </div>\n\n      <SelectFetch\n        url=\"/options/\"\n        queryParams={{\n          limit: 10,\n        }}\n        value={value}\n        isMulti\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        closeMenuOnSelect={false}\n        onChange={onChange}\n        menuIsOpen={menuIsOpen}\n        onMenuOpen={onMenuOpen}\n        onMenuClose={onMenuClose}\n        get={get}\n      />\n\n      <h2>Input value history</h2>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Action</th>\n\n            <th>Value</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {inputHistory.map((historyItem, index) => (\n            <tr key={index}>\n              <td>{historyItem.action}</td>\n\n              <td>{historyItem.inputValue}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Example;\n","import { useState } from 'react';\nimport type { FC } from 'react';\nimport sleep from 'sleep-promise';\n\nimport { SelectFetch } from '../src';\nimport type { Get } from '../src';\n\nconst options = [];\nfor (let i = 0; i < 50; ++i) {\n  options.push({\n    value: i + 1,\n    label: `Option ${i + 1}`,\n  });\n}\n\nconst get: Get = async (url, {\n  search,\n  offset,\n  limit,\n}) => {\n  await sleep(1000);\n\n  let filteredOptions;\n  if (!search) {\n    filteredOptions = options;\n  } else {\n    const searchLower = search.toLowerCase();\n\n    filteredOptions = options.filter(\n      ({ label }) => label.toLowerCase().includes(searchLower),\n    );\n  }\n\n  const hasMore = filteredOptions.length > offset + limit;\n  const slicedOptions = filteredOptions.slice(\n    offset,\n    offset + 10,\n  );\n\n  return {\n    options: slicedOptions,\n    hasMore,\n  };\n};\n\nconst Example: FC = () => {\n  const [value, onChange] = useState(null);\n\n  return (\n    <div\n      style={{\n        maxWidth: 300,\n      }}\n    >\n      <SelectFetch\n        url=\"/options/\"\n        queryParams={{\n          limit: 10,\n        }}\n        value={value}\n        onChange={onChange}\n        get={get}\n      />\n    </div>\n  );\n};\n\nexport default Example;\n","import { storiesOf } from '@storybook/react';\n\nimport Simple from './Simple';\nimport ManualControl from './ManualControl';\nimport InitialOptions from './InitialOptions';\n\nstoriesOf('react-select-fetch', module)\n  .add('Simple', () => <Simple />)\n  .add('Manual control', () => <ManualControl />)\n  .add('Initial options', () => <InitialOptions />);\n","import type {\n  FC,\n  ComponentType,\n} from 'react';\nimport type {\n  Props as SelectProps,\n} from 'react-select';\nimport {\n  useComponents,\n} from 'react-select-async-paginate';\nimport type {\n  ComponentProps,\n  UseAsyncPaginateResult,\n} from 'react-select-async-paginate';\n\nimport {\n  useSelectFetch,\n} from './useSelectFetch';\n\nimport type {\n  UseSelectFetchParams,\n} from './types';\n\nexport type Props<\nOptionType,\nIsMulti extends boolean,\n> =\n  & SelectProps<OptionType, IsMulti>\n  & UseSelectFetchParams<OptionType>\n  & ComponentProps\n  & {\n    useComponents?: typeof useComponents;\n    useSelectFetch?: typeof useSelectFetch;\n  };\n\nexport function withSelectFetch<\nOptionType,\nIsMulti extends boolean,\n>(\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  SelectComponent: ComponentType<SelectProps<OptionType, IsMulti>>,\n): FC<Props<OptionType, IsMulti>> {\n  const WithSelectFetch: FC<Props<OptionType, IsMulti>> = (props) => {\n    const {\n      components,\n      selectRef,\n      useComponents: useComponentsProp,\n      useSelectFetch: useSelectFetchProp,\n      cacheUniqs,\n      ...rest\n    } = props;\n\n    const asyncPaginateProps: UseAsyncPaginateResult<OptionType> = useSelectFetchProp(\n      rest,\n      cacheUniqs,\n    );\n\n    const processedComponents = useComponentsProp<OptionType, IsMulti>(components);\n\n    return (\n      <SelectComponent\n        {...props}\n        {...asyncPaginateProps}\n        components={processedComponents}\n        ref={selectRef}\n      />\n    );\n  };\n\n  WithSelectFetch.defaultProps = {\n    selectRef: null,\n    cacheUniqs: [],\n    components: {},\n    useComponents,\n    useSelectFetch,\n  };\n\n  return WithSelectFetch;\n}\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AAEA;AAEA;;AAUA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AADA;AAGA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAfA;AAqBA;AACA;AAFA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAyBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAJA;AALA;AAJA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AAEA;AACA;AAEA;;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","sourceRoot":""}